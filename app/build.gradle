/*
 * MIT License
 *
 * Copyright (c) 2018 Jasmine Villadarez
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def globalConf = rootProject.ext

android {
    compileSdkVersion globalConf.compiledSdkVersion
    buildToolsVersion globalConf.buildToolsVersion
    defaultConfig {
        applicationId "io.github.jasvilladarez.ello"
        minSdkVersion globalConf.minSdkVersion
        targetSdkVersion globalConf.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    def dependencies = globalConf.dependencies
    implementation dependencies.kotlin
    implementation project(':domain')

    implementation dependencies.appCompat
    implementation dependencies.design
    implementation dependencies.glide
    kapt dependencies.glideCompiler
    implementation dependencies.materialDialogCore
    implementation dependencies.materialDialogCommons

    kapt dependencies.lifecycleCompiler
    implementation dependencies.lifecycleExtensions
    implementation dependencies.paging
    implementation dependencies.pagingRxJava
    implementation dependencies.navigationFragment
    implementation dependencies.navigationUi

    kapt dependencies.daggerAndroidCompiler
    kapt dependencies.daggerCompiler
    implementation dependencies.dagger
    implementation dependencies.daggerAndroid

    implementation dependencies.rxJava
    implementation dependencies.rxRelay
    implementation dependencies.rxBindingV4

    testImplementation project(':common-test')
}
